{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/formcontrol\/formstate","title":"var formState: FormState<FieldName>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/formcontrol\/clearerrors(name:)","title":"func clearErrors(name: FieldName...) async","type":"method"},{"path":"\/documentation\/formhook\/formcontrol\/clearerrors(names:)","title":"func clearErrors(names: [FieldName]) async","type":"method"},{"path":"\/documentation\/formhook\/formcontrol\/getfieldstate(name:)-3p1te","title":"func getFieldState(name: FieldName) async -> FieldState","type":"method"},{"path":"\/documentation\/formhook\/formcontrol\/getfieldstate(name:)-6y4y6","title":"func getFieldState(name: FieldName) -> FieldState","type":"method"},{"path":"\/documentation\/formhook\/formcontrol\/handlesubmit(onvalid:oninvalid:)","title":"func handleSubmit(onValid: (FormValue<FieldName>, FormError<FieldName>) async throws -> Void, onInvalid: ((FormValue<FieldName>, FormError<FieldName>) async throws -> Void)?) async throws","type":"method"},{"path":"\/documentation\/formhook\/formcontrol\/register(name:options:)","title":"func register<Value>(name: FieldName, options: RegisterOption<Value>) -> FieldRegistration<Value>","type":"method"},{"path":"\/documentation\/formhook\/formcontrol\/reset(defaultvalues:options:)","title":"func reset(defaultValues: FormValue<FieldName>, options: ResetOption) async","type":"method"},{"path":"\/documentation\/formhook\/formcontrol\/reset(name:defaultvalue:options:)","title":"func reset(name: FieldName, defaultValue: Any, options: SingleResetOption) async","type":"method"},{"path":"\/documentation\/formhook\/formcontrol\/reset(name:options:)","title":"func reset(name: FieldName, options: SingleResetOption) async","type":"method"},{"path":"\/documentation\/formhook\/formcontrol\/setvalue(name:value:options:)","title":"func setValue(name: FieldName, value: Any, options: SetValueOption) async","type":"method"},{"path":"\/documentation\/formhook\/formcontrol\/trigger(name:shouldfocus:)","title":"func trigger(name: FieldName..., shouldFocus: Bool) async -> Bool","type":"method"},{"path":"\/documentation\/formhook\/formcontrol\/trigger(names:shouldfocus:)","title":"func trigger(names: [FieldName], shouldFocus: Bool) async -> Bool","type":"method"},{"path":"\/documentation\/formhook\/formcontrol\/unregister(name:options:)","title":"func unregister(name: FieldName..., options: UnregisterOption) async","type":"method"},{"path":"\/documentation\/formhook\/formcontrol\/unregister(names:options:)","title":"func unregister(names: [FieldName], options: UnregisterOption) async","type":"method"}],"path":"\/documentation\/formhook\/formcontrol","title":"FormControl","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/boolconvertible\/boolvalue","title":"var boolValue: Bool","type":"property"}],"path":"\/documentation\/formhook\/boolconvertible","title":"BoolConvertible","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/messagegenerator\/messages","title":"var messages: [String]","type":"property"}],"path":"\/documentation\/formhook\/messagegenerator","title":"MessageGenerator","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/formhook\/validator\/result","title":"Result","type":"associatedtype"},{"path":"\/documentation\/formhook\/validator\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/validator\/and(shouldgetallmessages:validator:)-3w76g","title":"func and(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/validator\/and(shouldgetallmessages:validator:)-8la4x","title":"func and<V>(shouldGetAllMessages: Bool, validator: V...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/validator\/computemessage(value:)","title":"func computeMessage(value: Self.Value) async -> (Bool, [String])","type":"method"},{"path":"\/documentation\/formhook\/validator\/erasetoanyvalidator()","title":"func eraseToAnyValidator() -> AnyValidator","type":"method"},{"children":[{"children":[{"path":"\/documentation\/formhook\/validator\/generatemessage(result:)-6e7tw","title":"func generateMessage(result: Self.Result) -> [String]","type":"method"},{"path":"\/documentation\/formhook\/validator\/generatemessage(result:)-5byms","title":"func generateMessage(result: Self.Result) -> [String]","type":"method"}],"title":"Validator Implementations","type":"groupMarker"}],"path":"\/documentation\/formhook\/validator\/generatemessage(result:)-19kwk","title":"func generateMessage(result: Self.Result) -> [String]","type":"method"},{"path":"\/documentation\/formhook\/validator\/isvalid(_:)","title":"func isValid(Self.Value) async -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/formhook\/validator\/isvalid(result:)-8q3y0","title":"func isValid(result: Self.Result) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/validator\/isvalid(result:)-9l64","title":"func isValid(result: Self.Result) -> Bool","type":"method"}],"title":"Validator Implementations","type":"groupMarker"}],"path":"\/documentation\/formhook\/validator\/isvalid(result:)-2si4p","title":"func isValid(result: Self.Result) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/validator\/or(shouldgetallmessages:validator:)-2f4nh","title":"func or<V>(shouldGetAllMessages: Bool, validator: V...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/validator\/or(shouldgetallmessages:validator:)-4pp9z","title":"func or(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/validator\/premap(_:)","title":"func preMap<Input>((Input) async -> Self.Value) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/validator\/validate(_:)","title":"func validate(Self.Value) async -> Self.Result","type":"method"}],"path":"\/documentation\/formhook\/validator","title":"Validator","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/anyvalidator\/init(_:messagegenerator:)-2otpj","title":"init<Value, Result>(ValidatorFunction<Value, Result>, messageGenerator: MessageGeneratorFunction<Result>)","type":"init"},{"path":"\/documentation\/formhook\/anyvalidator\/init(_:messagegenerator:)-8oyhg","title":"init<Value>(ValidatorFunction<Value, BoolConvertible>, messageGenerator: MessageGeneratorFunction<BoolConvertible>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/anyvalidator\/generatemessage(result:)","title":"func generateMessage(result: Any) -> [String]","type":"method"},{"path":"\/documentation\/formhook\/anyvalidator\/isvalid(result:)","title":"func isValid(result: Any) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/anyvalidator\/validate(_:)","title":"func validate(Any) async -> Any","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/anyvalidator\/and(shouldgetallmessages:validator:)","title":"func and(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/anyvalidator\/computemessage(value:)","title":"func computeMessage(value: Self.Value) async -> (Bool, [String])","type":"method"},{"path":"\/documentation\/formhook\/anyvalidator\/erasetoanyvalidator()","title":"func eraseToAnyValidator() -> AnyValidator","type":"method"},{"path":"\/documentation\/formhook\/anyvalidator\/isvalid(_:)","title":"func isValid(Self.Value) async -> Bool","type":"method"},{"path":"\/documentation\/formhook\/anyvalidator\/or(shouldgetallmessages:validator:)","title":"func or(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/anyvalidator\/premap(_:)","title":"func preMap<Input>((Input) async -> Self.Value) -> some Validator","type":"method"}],"path":"\/documentation\/formhook\/anyvalidator\/validator-implementations","title":"Validator Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/anyvalidator","title":"AnyValidator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/contextualform\/init(mode:revalidatemode:resolver:context:shouldunregister:shouldfocuserror:delayerrorinnanoseconds:focusedfieldbinder:content:)","title":"init(mode: Mode, reValidateMode: ReValidateMode, resolver: Resolver<FieldName>?, context: Any?, shouldUnregister: Bool, shouldFocusError: Bool, delayErrorInNanoseconds: UInt64, focusedFieldBinder: FocusState<FieldName?>.Binding, content: (FormControl<FieldName>) -> Content)","type":"init"},{"path":"\/documentation\/formhook\/contextualform\/init(mode:revalidatemode:resolver:context:shouldunregister:shouldfocuserror:delayerrorinnanoseconds:onfocusfield:content:)","title":"init(mode: Mode, reValidateMode: ReValidateMode, resolver: Resolver<FieldName>?, context: Any?, shouldUnregister: Bool, shouldFocusError: Bool, delayErrorInNanoseconds: UInt64, onFocusField: (FieldName) -> Void, content: (FormControl<FieldName>) -> Content)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/contextualform\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/accessibility(activationpoint:)-7ze4t","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/accessibility(activationpoint:)-9t8db","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityaction(named:_:)-3plf4","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityaction(named:_:)-50qes","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityaction(named:_:)-69rga","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityactivationpoint(_:)-14oe6","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityactivationpoint(_:)-5sjxr","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitycustomcontent(_:_:importance:)-16l38","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitycustomcontent(_:_:importance:)-3zeir","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitycustomcontent(_:_:importance:)-43oie","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitycustomcontent(_:_:importance:)-52jtg","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitycustomcontent(_:_:importance:)-5lbyw","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitycustomcontent(_:_:importance:)-61bzo","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitycustomcontent(_:_:importance:)-790w1","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitycustomcontent(_:_:importance:)-9klmf","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityhint(_:)-5l23o","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityhint(_:)-60x5t","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityhint(_:)-742lu","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityinputlabels(_:)-29p3l","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityinputlabels(_:)-6p0qi","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityinputlabels(_:)-7wb2c","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitylabel(_:)-7qtmg","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitylabel(_:)-7yp4q","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitylabel(_:)-9rngm","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:entries:)-1epi1","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:entries:)-38l3i","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:entries:)-47zgk","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:entries:)-7a1az","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:entries:entryid:entrylabel:)-1rlid","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:entries:entryid:entrylabel:)-1v5un","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:entries:entryid:entrylabel:)-6n8n4","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:entries:entryid:entrylabel:)-pnrc","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:entries:entrylabel:)-3rjhp","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:entries:entrylabel:)-5ghq6","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:entries:entrylabel:)-6zwf7","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:entries:entrylabel:)-9vuyz","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:textranges:)-1edmh","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:textranges:)-2smb5","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:textranges:)-36heg","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotor(_:textranges:)-4vne3","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityvalue(_:)-26sas","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityvalue(_:)-8p9rl","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/accessibilityvalue(_:)-9q43s","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alert(_:ispresented:actions:)-14ofg","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alert(_:ispresented:actions:)-4fqer","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alert(_:ispresented:actions:)-4v0kr","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alert(_:ispresented:actions:message:)-4lukt","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alert(_:ispresented:actions:message:)-6c2pk","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alert(_:ispresented:actions:message:)-9h40t","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alert(_:ispresented:presenting:actions:)-1eevj","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alert(_:ispresented:presenting:actions:)-3zdx6","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alert(_:ispresented:presenting:actions:)-45oh3","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alert(_:ispresented:presenting:actions:message:)-27vbu","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alert(_:ispresented:presenting:actions:message:)-5xcsk","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alert(_:ispresented:presenting:actions:message:)-8y7u","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alignmentguide(_:computevalue:)-1r2cn","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/alignmentguide(_:computevalue:)-9oy2f","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/aspectratio(_:contentmode:)-3paxh","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/aspectratio(_:contentmode:)-9qbhy","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/background(_:in:fillstyle:)-2pt0t","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/background(_:in:fillstyle:)-8gh4d","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/background(in:fillstyle:)-94deb","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/background(in:fillstyle:)-9m4sk","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/badge(_:)-2pmg4","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/badge(_:)-5eknm","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/badge(_:)-6142s","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/badge(_:)-ckr1","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/buttonstyle(_:)-19cof","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/buttonstyle(_:)-25n2i","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7a2ee","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8pi8l","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9cz6r","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-15c01","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7flq6","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-90ptb","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1w7pg","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-52h7s","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8c3de","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-13wgu","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-69gl3","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7kgcp","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/disablehooksrulesassertion(_:)","title":"func disableHooksRulesAssertion(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4lv8l","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-72lkm","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/fileexporter(ispresented:documents:contenttype:oncompletion:)-85p4o","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/fileexporter(ispresented:documents:contenttype:oncompletion:)-95szj","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/focusedobject(_:)-6vkio","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/focusedobject(_:)-787hi","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/focusedsceneobject(_:)-281e3","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/focusedsceneobject(_:)-60f4","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/focusedscenevalue(_:_:)-11whq","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/focusedscenevalue(_:_:)-oqq0","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/focusedvalue(_:_:)-1gon1","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/focusedvalue(_:_:)-1q95o","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/help(_:)-47dwh","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/help(_:)-6a68r","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/help(_:)-6tcge","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/keyboardshortcut(_:)-777ul","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/keyboardshortcut(_:)-7wu3x","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/linelimit(_:)-30693","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/linelimit(_:)-3s47","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/linelimit(_:)-4uvnj","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/linelimit(_:)-6pkf9","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/listitemtint(_:)-3uatl","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/listitemtint(_:)-9gnwa","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/navigationbartitle(_:)-1d8or","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/navigationbartitle(_:)-1l5g7","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/navigationbartitle(_:)-5x5wu","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/navigationbartitle(_:displaymode:)-2dmeb","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/navigationbartitle(_:displaymode:)-5izpg","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/navigationbartitle(_:displaymode:)-6w9om","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationdocument(_:preview:)-1w974","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationdocument(_:preview:)-4w251","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationdocument(_:preview:)-7w8bh","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationdocument(_:preview:)-8jwwi","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationsubtitle(_:)-4263n","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationsubtitle(_:)-8iil4","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationsubtitle(_:)-uvv","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationtitle(_:)-1d99q","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationtitle(_:)-24yrx","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationtitle(_:)-3owua","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationtitle(_:)-3uk2t","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/navigationtitle(_:)-7w790","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/ondrop(of:delegate:)-4b3vu","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/ondrop(of:delegate:)-65ztv","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/ondrop(of:istargeted:perform:)-5cfxt","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/ondrop(of:istargeted:perform:)-7g4vi","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/ondrop(of:istargeted:perform:)-7zuvz","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/ondrop(of:istargeted:perform:)-8wr6k","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/onpastecommand(of:perform:)-23t9e","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/onpastecommand(of:perform:)-23yfw","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/onpastecommand(of:validator:perform:)-14rob","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/onpastecommand(of:validator:perform:)-4l6vq","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/padding(_:)-1fbw7","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/padding(_:)-2ehf2","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/renameaction(_:)-5qccf","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/renameaction(_:)-8rz7e","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/safeareainset(edge:alignment:spacing:content:)-2i7bs","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/safeareainset(edge:alignment:spacing:content:)-4wzb8","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/scaleeffect(_:anchor:)-8hm67","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/scaleeffect(_:anchor:)-8o0tt","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/searchable(text:placement:prompt:)-14iqx","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/searchable(text:placement:prompt:)-8j024","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/searchable(text:placement:prompt:)-9kuve","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/searchable(text:placement:prompt:suggestions:)-3vvdz","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/searchable(text:placement:prompt:suggestions:)-426rl","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/contextualform\/searchable(text:placement:prompt:suggestions:)-9bmtz","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/searchable(text:tokens:placement:prompt:token:)-4hzoe","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/searchable(text:tokens:placement:prompt:token:)-6aah","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/searchable(text:tokens:placement:prompt:token:)-7k01u","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2sv71","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7msi4","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7x6a4","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/toolbar(content:)-18pf9","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/toolbar(content:)-7x6jf","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/formhook\/contextualform\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/formhook\/contextualform\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/contextualform","title":"ContextualForm","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/controller\/init(form:name:defaultvalue:rules:shouldunregister:unregisteroption:fieldordinal:render:)","title":"init(form: FormControl<FieldName>?, name: FieldName, defaultValue: Value, rules: Validator<Value>, shouldUnregister: Bool, unregisterOption: UnregisterOption, fieldOrdinal: Int?, render: (ControllerRenderOption<FieldName, Value>) -> Content)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/controller\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/accessibility(activationpoint:)-27x0k","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/accessibility(activationpoint:)-35yv0","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityaction(named:_:)-582wa","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityaction(named:_:)-933tj","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityaction(named:_:)-vxmb","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityactivationpoint(_:)-7gwl3","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityactivationpoint(_:)-xo3t","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitycustomcontent(_:_:importance:)-2bumz","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitycustomcontent(_:_:importance:)-2howu","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitycustomcontent(_:_:importance:)-47qme","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitycustomcontent(_:_:importance:)-6fjfr","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitycustomcontent(_:_:importance:)-6u462","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitycustomcontent(_:_:importance:)-7a89a","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitycustomcontent(_:_:importance:)-7u39z","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitycustomcontent(_:_:importance:)-ccxt","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityhint(_:)-58buv","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityhint(_:)-82fpz","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityhint(_:)-8cqdu","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityinputlabels(_:)-3o7v1","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityinputlabels(_:)-7oqnr","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityinputlabels(_:)-852k4","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitylabel(_:)-1y2ax","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitylabel(_:)-8ce2","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitylabel(_:)-8y7iv","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:entries:)-18vg5","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:entries:)-4f3no","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:entries:)-4ojo6","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:entries:)-955hm","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:entries:entryid:entrylabel:)-17i3j","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:entries:entryid:entrylabel:)-67fal","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:entries:entryid:entrylabel:)-97wbc","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:entries:entryid:entrylabel:)-u17q","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:entries:entrylabel:)-2imke","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:entries:entrylabel:)-3dwbb","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:entries:entrylabel:)-4gug1","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:entries:entrylabel:)-5nr64","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:textranges:)-2jfoc","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:textranges:)-2mxxv","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:textranges:)-743j4","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotor(_:textranges:)-8zcb6","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityvalue(_:)-12wbm","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityvalue(_:)-6zne1","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/accessibilityvalue(_:)-hmak","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/formhook\/controller\/alert(_:ispresented:actions:)-2plr4","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/alert(_:ispresented:actions:)-3y1o1","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/alert(_:ispresented:actions:)-8lab2","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/alert(_:ispresented:actions:message:)-37uo7","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/alert(_:ispresented:actions:message:)-4fy1x","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/alert(_:ispresented:actions:message:)-94j3o","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/alert(_:ispresented:presenting:actions:)-2s4fu","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/alert(_:ispresented:presenting:actions:)-91hhf","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/alert(_:ispresented:presenting:actions:)-9mrxj","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/alert(_:ispresented:presenting:actions:message:)-2v3tn","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/alert(_:ispresented:presenting:actions:message:)-8p1ok","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/alert(_:ispresented:presenting:actions:message:)-8zdah","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/alignmentguide(_:computevalue:)-1ksrh","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/alignmentguide(_:computevalue:)-3ae84","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/aspectratio(_:contentmode:)-6avv4","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/aspectratio(_:contentmode:)-8gv2s","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/background(_:in:fillstyle:)-49rv0","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/background(_:in:fillstyle:)-9s8jx","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/background(in:fillstyle:)-5tr4h","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/background(in:fillstyle:)-7i5dx","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/badge(_:)-34nkw","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/badge(_:)-5e0g6","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/badge(_:)-6o01d","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/badge(_:)-9qqz0","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/buttonstyle(_:)-7c38p","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/buttonstyle(_:)-ecp3","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6hlo7","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6ujkj","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8ri8w","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-21aia","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5y4ij","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7a6uc","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-42hh3","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5jevm","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-kplt","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1bpf3","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-m9g9","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-s6kk","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/disablehooksrulesassertion(_:)","title":"func disableHooksRulesAssertion(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4boyq","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6qsxb","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4zyl9","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5mwpz","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/focusedobject(_:)-7v1qh","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/focusedobject(_:)-90r3w","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/focusedsceneobject(_:)-1xjst","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/focusedsceneobject(_:)-8tle1","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/focusedscenevalue(_:_:)-5mu0j","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/focusedscenevalue(_:_:)-920s4","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/focusedvalue(_:_:)-3sujw","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/focusedvalue(_:_:)-65il5","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/help(_:)-3chtl","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/help(_:)-6xsac","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/help(_:)-7aylx","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/keyboardshortcut(_:)-2t06v","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/keyboardshortcut(_:)-7usbl","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/linelimit(_:)-1q9gw","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/linelimit(_:)-4f342","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/linelimit(_:)-5k4dq","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/linelimit(_:)-631r7","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/listitemtint(_:)-7g5kr","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/listitemtint(_:)-8fo2o","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/formhook\/controller\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/navigationbartitle(_:)-69b7f","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/navigationbartitle(_:)-9p5ri","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/navigationbartitle(_:)-aah0","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/navigationbartitle(_:displaymode:)-4k1ab","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/navigationbartitle(_:displaymode:)-4xm45","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/navigationbartitle(_:displaymode:)-5186u","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationdocument(_:preview:)-1rp18","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationdocument(_:preview:)-3c3v4","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationdocument(_:preview:)-6jted","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationdocument(_:preview:)-6o9dd","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationsubtitle(_:)-2i73m","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationsubtitle(_:)-3todr","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationsubtitle(_:)-4gwqt","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationtitle(_:)-16aez","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationtitle(_:)-1h0gk","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationtitle(_:)-253fv","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationtitle(_:)-41ail","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/navigationtitle(_:)-58wf2","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/ondrop(of:delegate:)-5hhd5","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/ondrop(of:delegate:)-n0br","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/ondrop(of:istargeted:perform:)-1upry","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/ondrop(of:istargeted:perform:)-2by1s","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/ondrop(of:istargeted:perform:)-7jf54","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/ondrop(of:istargeted:perform:)-853b8","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/onpastecommand(of:perform:)-7gehs","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/onpastecommand(of:perform:)-8gths","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/onpastecommand(of:validator:perform:)-2ni82","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/onpastecommand(of:validator:perform:)-3je3m","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/padding(_:)-4958p","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/padding(_:)-524po","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/renameaction(_:)-2vek0","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/renameaction(_:)-93g3s","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/safeareainset(edge:alignment:spacing:content:)-1b8zb","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/safeareainset(edge:alignment:spacing:content:)-2f1de","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/scaleeffect(_:anchor:)-4dwun","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/scaleeffect(_:anchor:)-9rua3","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/searchable(text:placement:prompt:)-3f5qv","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/searchable(text:placement:prompt:)-5cz3l","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/searchable(text:placement:prompt:)-9r2g7","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/searchable(text:placement:prompt:suggestions:)-2k8ip","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/searchable(text:placement:prompt:suggestions:)-3e07t","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/formhook\/controller\/searchable(text:placement:prompt:suggestions:)-75sre","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/searchable(text:tokens:placement:prompt:token:)-4k6ga","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/searchable(text:tokens:placement:prompt:token:)-8lxwp","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/searchable(text:tokens:placement:prompt:token:)-yxk5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-36yqw","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5sjqn","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6kr5t","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/toolbar(content:)-1kbvy","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/toolbar(content:)-7zxca","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/formhook\/controller\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/formhook\/controller\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/controller","title":"Controller","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/fieldoption\/name","title":"let name: FieldName","type":"property"},{"path":"\/documentation\/formhook\/fieldoption\/value","title":"let value: Binding<Value>","type":"property"}],"path":"\/documentation\/formhook\/fieldoption","title":"FieldOption","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/fieldstate\/error","title":"let error: [String]","type":"property"},{"path":"\/documentation\/formhook\/fieldstate\/isdirty","title":"let isDirty: Bool","type":"property"},{"path":"\/documentation\/formhook\/fieldstate\/isinvalid","title":"let isInvalid: Bool","type":"property"}],"path":"\/documentation\/formhook\/fieldstate","title":"FieldState","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/formerror\/errorfields","title":"var errorFields: Set<FieldName>","type":"property"},{"path":"\/documentation\/formhook\/formerror\/messages","title":"var messages: [FieldName : [String]]","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/formhook\/formerror\/subscript(_:)","title":"subscript(FieldName) -> [String]?","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/formhook\/formerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/formhook\/formerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/formerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/formhook\/formerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/formerror","title":"FormError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/formoption\/init(mode:revalidatemode:resolver:context:shouldunregister:shouldfocuserror:delayerrorinnanoseconds:focusedstatebinder:)","title":"init(mode: Mode, reValidateMode: ReValidateMode, resolver: Resolver<FieldName>?, context: Any?, shouldUnregister: Bool, shouldFocusError: Bool, delayErrorInNanoseconds: UInt64, focusedStateBinder: FocusState<FieldName?>.Binding)","type":"init"},{"path":"\/documentation\/formhook\/formoption\/init(mode:revalidatemode:resolver:context:shouldunregister:shouldfocuserror:delayerrorinnanoseconds:onfocusfield:)","title":"init(mode: Mode, reValidateMode: ReValidateMode, resolver: Resolver<FieldName>?, context: Any?, shouldUnregister: Bool, shouldFocusError: Bool, delayErrorInNanoseconds: UInt64, onFocusField: (FieldName) -> Void)","type":"init"}],"path":"\/documentation\/formhook\/formoption","title":"FormOption","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/formhook\/formstate\/==(_:_:)","title":"static func == (FormState<FieldName>, FormState<FieldName>) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/formstate\/defaultvalues","title":"var defaultValues: FormValue<FieldName>","type":"property"},{"path":"\/documentation\/formhook\/formstate\/dirtyfields","title":"var dirtyFields: Set<FieldName>","type":"property"},{"path":"\/documentation\/formhook\/formstate\/errors","title":"var errors: FormError<FieldName>","type":"property"},{"path":"\/documentation\/formhook\/formstate\/formvalues","title":"var formValues: FormValue<FieldName>","type":"property"},{"path":"\/documentation\/formhook\/formstate\/isdirty","title":"var isDirty: Bool","type":"property"},{"path":"\/documentation\/formhook\/formstate\/issubmitsuccessful","title":"var isSubmitSuccessful: Bool","type":"property"},{"path":"\/documentation\/formhook\/formstate\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/formhook\/formstate\/isvalidating","title":"var isValidating: Bool","type":"property"},{"path":"\/documentation\/formhook\/formstate\/submissionstate","title":"var submissionState: SubmissionState","type":"property"},{"path":"\/documentation\/formhook\/formstate\/submitcount","title":"var submitCount: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/formhook\/formstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/formhook\/formstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/formstate","title":"FormState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/lengthrangevalidator\/init(maxlength:_:)","title":"init(maxLength: Int, MessageGeneratorFunction<Bool>)","type":"init"},{"path":"\/documentation\/formhook\/lengthrangevalidator\/init(minlength:_:)","title":"init(minLength: Int, MessageGeneratorFunction<Bool>)","type":"init"},{"path":"\/documentation\/formhook\/lengthrangevalidator\/init(minlength:maxlength:_:)","title":"init(minLength: Int, maxLength: Int, MessageGeneratorFunction<Bool>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/lengthrangevalidator\/generatemessage(result:)","title":"func generateMessage(result: Bool) -> [String]","type":"method"},{"path":"\/documentation\/formhook\/lengthrangevalidator\/validate(_:)","title":"func validate(Value) async -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/lengthrangevalidator\/and(shouldgetallmessages:validator:)","title":"func and(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/lengthrangevalidator\/computemessage(value:)","title":"func computeMessage(value: Self.Value) async -> (Bool, [String])","type":"method"},{"path":"\/documentation\/formhook\/lengthrangevalidator\/erasetoanyvalidator()","title":"func eraseToAnyValidator() -> AnyValidator","type":"method"},{"path":"\/documentation\/formhook\/lengthrangevalidator\/isvalid(_:)","title":"func isValid(Self.Value) async -> Bool","type":"method"},{"path":"\/documentation\/formhook\/lengthrangevalidator\/isvalid(result:)","title":"func isValid(result: Self.Result) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/lengthrangevalidator\/or(shouldgetallmessages:validator:)","title":"func or(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/lengthrangevalidator\/premap(_:)","title":"func preMap<Input>((Input) async -> Self.Value) -> some Validator","type":"method"}],"path":"\/documentation\/formhook\/lengthrangevalidator\/validator-implementations","title":"Validator Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/lengthrangevalidator","title":"LengthRangeValidator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/mode\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/mode\/rawvalue","title":"var rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/mode\/all","title":"static let all: Mode","type":"property"},{"path":"\/documentation\/formhook\/mode\/onchange","title":"static let onChange: Mode","type":"property"},{"path":"\/documentation\/formhook\/mode\/onsubmit","title":"static let onSubmit: Mode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/formhook\/mode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/formhook\/mode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/mode\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/mode\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/mode\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/formhook\/mode\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/formhook\/mode\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/formhook\/mode\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/formhook\/mode\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/formhook\/mode\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/formhook\/mode\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/formhook\/mode\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/formhook\/mode\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/formhook\/mode\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/mode\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/formhook\/mode\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/mode\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/mode\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/mode\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/mode\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/mode\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/mode\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/mode\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/formhook\/mode\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/formhook\/mode\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/mode","title":"Mode","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/noopvalidator\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/noopvalidator\/generatemessage(result:)","title":"func generateMessage(result: Bool) -> [String]","type":"method"},{"path":"\/documentation\/formhook\/noopvalidator\/validate(_:)","title":"func validate(Value) async -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/noopvalidator\/and(shouldgetallmessages:validator:)","title":"func and(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/noopvalidator\/computemessage(value:)","title":"func computeMessage(value: Self.Value) async -> (Bool, [String])","type":"method"},{"path":"\/documentation\/formhook\/noopvalidator\/erasetoanyvalidator()","title":"func eraseToAnyValidator() -> AnyValidator","type":"method"},{"path":"\/documentation\/formhook\/noopvalidator\/isvalid(_:)","title":"func isValid(Self.Value) async -> Bool","type":"method"},{"path":"\/documentation\/formhook\/noopvalidator\/isvalid(result:)","title":"func isValid(result: Self.Result) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/noopvalidator\/or(shouldgetallmessages:validator:)","title":"func or(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/noopvalidator\/premap(_:)","title":"func preMap<Input>((Input) async -> Self.Value) -> some Validator","type":"method"}],"path":"\/documentation\/formhook\/noopvalidator\/validator-implementations","title":"Validator Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/noopvalidator","title":"NoopValidator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/notemptyvalidator\/init(_:)","title":"init(MessageGeneratorFunction<Bool>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/notemptyvalidator\/generatemessage(result:)","title":"func generateMessage(result: Bool) -> [String]","type":"method"},{"path":"\/documentation\/formhook\/notemptyvalidator\/validate(_:)","title":"func validate(Value) async -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/notemptyvalidator\/and(shouldgetallmessages:validator:)","title":"func and(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/notemptyvalidator\/computemessage(value:)","title":"func computeMessage(value: Self.Value) async -> (Bool, [String])","type":"method"},{"path":"\/documentation\/formhook\/notemptyvalidator\/erasetoanyvalidator()","title":"func eraseToAnyValidator() -> AnyValidator","type":"method"},{"path":"\/documentation\/formhook\/notemptyvalidator\/isvalid(_:)","title":"func isValid(Self.Value) async -> Bool","type":"method"},{"path":"\/documentation\/formhook\/notemptyvalidator\/isvalid(result:)","title":"func isValid(result: Self.Result) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/notemptyvalidator\/or(shouldgetallmessages:validator:)","title":"func or(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/notemptyvalidator\/premap(_:)","title":"func preMap<Input>((Input) async -> Self.Value) -> some Validator","type":"method"}],"path":"\/documentation\/formhook\/notemptyvalidator\/validator-implementations","title":"Validator Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/notemptyvalidator","title":"NotEmptyValidator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/notnilvalidator\/init(_:)","title":"init(MessageGeneratorFunction<Bool>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/notnilvalidator\/generatemessage(result:)","title":"func generateMessage(result: Bool) -> [String]","type":"method"},{"path":"\/documentation\/formhook\/notnilvalidator\/validate(_:)","title":"func validate(V?) async -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/notnilvalidator\/and(shouldgetallmessages:validator:)","title":"func and(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/notnilvalidator\/computemessage(value:)","title":"func computeMessage(value: Self.Value) async -> (Bool, [String])","type":"method"},{"path":"\/documentation\/formhook\/notnilvalidator\/erasetoanyvalidator()","title":"func eraseToAnyValidator() -> AnyValidator","type":"method"},{"path":"\/documentation\/formhook\/notnilvalidator\/isvalid(_:)","title":"func isValid(Self.Value) async -> Bool","type":"method"},{"path":"\/documentation\/formhook\/notnilvalidator\/isvalid(result:)","title":"func isValid(result: Self.Result) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/notnilvalidator\/or(shouldgetallmessages:validator:)","title":"func or(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/notnilvalidator\/premap(_:)","title":"func preMap<Input>((Input) async -> Self.Value) -> some Validator","type":"method"}],"path":"\/documentation\/formhook\/notnilvalidator\/validator-implementations","title":"Validator Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/notnilvalidator","title":"NotNilValidator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/patternmatchingvalidator\/init(pattern:_:)","title":"init(pattern: String, MessageGeneratorFunction<Bool>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/patternmatchingvalidator\/generatemessage(result:)","title":"func generateMessage(result: Bool) -> [String]","type":"method"},{"path":"\/documentation\/formhook\/patternmatchingvalidator\/validate(_:)","title":"func validate(Value) async -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/patternmatchingvalidator\/and(shouldgetallmessages:validator:)","title":"func and(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/patternmatchingvalidator\/computemessage(value:)","title":"func computeMessage(value: Self.Value) async -> (Bool, [String])","type":"method"},{"path":"\/documentation\/formhook\/patternmatchingvalidator\/erasetoanyvalidator()","title":"func eraseToAnyValidator() -> AnyValidator","type":"method"},{"path":"\/documentation\/formhook\/patternmatchingvalidator\/isvalid(_:)","title":"func isValid(Self.Value) async -> Bool","type":"method"},{"path":"\/documentation\/formhook\/patternmatchingvalidator\/isvalid(result:)","title":"func isValid(result: Self.Result) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/patternmatchingvalidator\/or(shouldgetallmessages:validator:)","title":"func or(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/patternmatchingvalidator\/premap(_:)","title":"func preMap<Input>((Input) async -> Self.Value) -> some Validator","type":"method"}],"path":"\/documentation\/formhook\/patternmatchingvalidator\/validator-implementations","title":"Validator Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/patternmatchingvalidator","title":"PatternMatchingValidator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/rangevalidator\/init(max:_:)","title":"init(max: Value?, MessageGeneratorFunction<Bool>)","type":"init"},{"path":"\/documentation\/formhook\/rangevalidator\/init(min:_:)","title":"init(min: Value, MessageGeneratorFunction<Bool>)","type":"init"},{"path":"\/documentation\/formhook\/rangevalidator\/init(min:max:_:)","title":"init(min: Value, max: Value, MessageGeneratorFunction<Bool>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/rangevalidator\/generatemessage(result:)","title":"func generateMessage(result: Bool) -> [String]","type":"method"},{"path":"\/documentation\/formhook\/rangevalidator\/validate(_:)","title":"func validate(Value) async -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/rangevalidator\/and(shouldgetallmessages:validator:)","title":"func and(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/rangevalidator\/computemessage(value:)","title":"func computeMessage(value: Self.Value) async -> (Bool, [String])","type":"method"},{"path":"\/documentation\/formhook\/rangevalidator\/erasetoanyvalidator()","title":"func eraseToAnyValidator() -> AnyValidator","type":"method"},{"path":"\/documentation\/formhook\/rangevalidator\/isvalid(_:)","title":"func isValid(Self.Value) async -> Bool","type":"method"},{"path":"\/documentation\/formhook\/rangevalidator\/isvalid(result:)","title":"func isValid(result: Self.Result) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/rangevalidator\/or(shouldgetallmessages:validator:)","title":"func or(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/rangevalidator\/premap(_:)","title":"func preMap<Input>((Input) async -> Self.Value) -> some Validator","type":"method"}],"path":"\/documentation\/formhook\/rangevalidator\/validator-implementations","title":"Validator Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/rangevalidator","title":"RangeValidator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/regexmatchingvalidator\/init(regex:_:)","title":"init(regex: Regex<Value>, MessageGeneratorFunction<Bool>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/regexmatchingvalidator\/generatemessage(result:)","title":"func generateMessage(result: Bool) -> [String]","type":"method"},{"path":"\/documentation\/formhook\/regexmatchingvalidator\/validate(_:)","title":"func validate(Value) async -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/regexmatchingvalidator\/and(shouldgetallmessages:validator:)","title":"func and(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/regexmatchingvalidator\/computemessage(value:)","title":"func computeMessage(value: Self.Value) async -> (Bool, [String])","type":"method"},{"path":"\/documentation\/formhook\/regexmatchingvalidator\/erasetoanyvalidator()","title":"func eraseToAnyValidator() -> AnyValidator","type":"method"},{"path":"\/documentation\/formhook\/regexmatchingvalidator\/isvalid(_:)","title":"func isValid(Self.Value) async -> Bool","type":"method"},{"path":"\/documentation\/formhook\/regexmatchingvalidator\/isvalid(result:)","title":"func isValid(result: Self.Result) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/regexmatchingvalidator\/or(shouldgetallmessages:validator:)","title":"func or(shouldGetAllMessages: Bool, validator: Validator<Self.Value>...) -> some Validator","type":"method"},{"path":"\/documentation\/formhook\/regexmatchingvalidator\/premap(_:)","title":"func preMap<Input>((Input) async -> Self.Value) -> some Validator","type":"method"}],"path":"\/documentation\/formhook\/regexmatchingvalidator\/validator-implementations","title":"Validator Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/regexmatchingvalidator","title":"RegexMatchingValidator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/registeroption\/init(fieldordinal:rules:defaultvalue:shouldunregister:)","title":"init(fieldOrdinal: Int?, rules: Validator<Value>, defaultValue: Value, shouldUnregister: Bool)","type":"init"}],"path":"\/documentation\/formhook\/registeroption","title":"RegisterOption","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/resetoption\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/resetoption\/rawvalue","title":"var rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/resetoption\/all","title":"static let all: ResetOption","type":"property"},{"path":"\/documentation\/formhook\/resetoption\/keepdefaultvalues","title":"static let keepDefaultValues: ResetOption","type":"property"},{"path":"\/documentation\/formhook\/resetoption\/keepdirty","title":"static let keepDirty: ResetOption","type":"property"},{"path":"\/documentation\/formhook\/resetoption\/keeperrors","title":"static let keepErrors: ResetOption","type":"property"},{"path":"\/documentation\/formhook\/resetoption\/keepissubmitted","title":"static let keepIsSubmitted: ResetOption","type":"property"},{"path":"\/documentation\/formhook\/resetoption\/keepisvalid","title":"static let keepIsValid: ResetOption","type":"property"},{"path":"\/documentation\/formhook\/resetoption\/keepsubmitcount","title":"static let keepSubmitCount: ResetOption","type":"property"},{"path":"\/documentation\/formhook\/resetoption\/keepvalues","title":"static let keepValues: ResetOption","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/formhook\/resetoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/formhook\/resetoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/resetoption\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/resetoption\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/resetoption\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/formhook\/resetoption\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/formhook\/resetoption\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/formhook\/resetoption\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/formhook\/resetoption\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/formhook\/resetoption\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/formhook\/resetoption\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/formhook\/resetoption\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/formhook\/resetoption\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/formhook\/resetoption\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/resetoption\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/formhook\/resetoption\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/resetoption\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/resetoption\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/resetoption\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/resetoption\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/resetoption\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/resetoption\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/resetoption\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/formhook\/resetoption\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/formhook\/resetoption\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/resetoption","title":"ResetOption","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/setvalueoption\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/setvalueoption\/rawvalue","title":"var rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/setvalueoption\/all","title":"static let all: SetValueOption","type":"property"},{"path":"\/documentation\/formhook\/setvalueoption\/shoulddirty","title":"static let shouldDirty: SetValueOption","type":"property"},{"path":"\/documentation\/formhook\/setvalueoption\/shouldvalidate","title":"static let shouldValidate: SetValueOption","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/formhook\/setvalueoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/formhook\/setvalueoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/setvalueoption\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/setvalueoption\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/setvalueoption\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/formhook\/setvalueoption\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/formhook\/setvalueoption\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/formhook\/setvalueoption\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/formhook\/setvalueoption\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/formhook\/setvalueoption\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/formhook\/setvalueoption\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/formhook\/setvalueoption\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/formhook\/setvalueoption\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/formhook\/setvalueoption\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/setvalueoption\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/formhook\/setvalueoption\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/setvalueoption\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/setvalueoption\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/setvalueoption\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/setvalueoption\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/setvalueoption\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/setvalueoption\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/setvalueoption\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/formhook\/setvalueoption\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/formhook\/setvalueoption\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/setvalueoption","title":"SetValueOption","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/singleresetoption\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/singleresetoption\/rawvalue","title":"var rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/singleresetoption\/all","title":"static let all: SingleResetOption","type":"property"},{"path":"\/documentation\/formhook\/singleresetoption\/keepdirty","title":"static let keepDirty: SingleResetOption","type":"property"},{"path":"\/documentation\/formhook\/singleresetoption\/keeperror","title":"static let keepError: SingleResetOption","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/formhook\/singleresetoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/formhook\/singleresetoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/singleresetoption\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/singleresetoption\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/singleresetoption\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/formhook\/singleresetoption\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/formhook\/singleresetoption\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/formhook\/singleresetoption\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/formhook\/singleresetoption\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/formhook\/singleresetoption\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/formhook\/singleresetoption\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/formhook\/singleresetoption\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/formhook\/singleresetoption\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/formhook\/singleresetoption\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/singleresetoption\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/formhook\/singleresetoption\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/singleresetoption\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/singleresetoption\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/singleresetoption\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/singleresetoption\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/singleresetoption\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/singleresetoption\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/singleresetoption\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/formhook\/singleresetoption\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/formhook\/singleresetoption\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/singleresetoption","title":"SingleResetOption","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/unregisteroption\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/unregisteroption\/rawvalue","title":"var rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/unregisteroption\/all","title":"static let all: UnregisterOption","type":"property"},{"path":"\/documentation\/formhook\/unregisteroption\/keepdefaultvalue","title":"static let keepDefaultValue: UnregisterOption","type":"property"},{"path":"\/documentation\/formhook\/unregisteroption\/keepdirty","title":"static let keepDirty: UnregisterOption","type":"property"},{"path":"\/documentation\/formhook\/unregisteroption\/keeperror","title":"static let keepError: UnregisterOption","type":"property"},{"path":"\/documentation\/formhook\/unregisteroption\/keepisvalid","title":"static let keepIsValid: UnregisterOption","type":"property"},{"path":"\/documentation\/formhook\/unregisteroption\/keepvalue","title":"static let keepValue: UnregisterOption","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/formhook\/unregisteroption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/formhook\/unregisteroption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/unregisteroption\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/unregisteroption\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/unregisteroption\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/formhook\/unregisteroption\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/formhook\/unregisteroption\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/formhook\/unregisteroption\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/formhook\/unregisteroption\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/formhook\/unregisteroption\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/formhook\/unregisteroption\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/formhook\/unregisteroption\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/formhook\/unregisteroption\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/formhook\/unregisteroption\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/formhook\/unregisteroption\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/formhook\/unregisteroption\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/formhook\/unregisteroption\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/formhook\/unregisteroption\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/unregisteroption\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/unregisteroption\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/unregisteroption\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/unregisteroption\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/formhook\/unregisteroption\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/formhook\/unregisteroption\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/formhook\/unregisteroption\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/unregisteroption","title":"UnregisterOption","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/formhook\/usecontroller(form:name:defaultvalue:rules:shouldunregister:unregisteroption:fieldordinal:)","title":"func useController<FieldName, Value>(form: FormControl<FieldName>?, name: FieldName, defaultValue: Value, rules: Validator<Value>, shouldUnregister: Bool, unregisterOption: UnregisterOption, fieldOrdinal: Int?) -> ControllerRenderOption<FieldName, Value>","type":"func"},{"path":"\/documentation\/formhook\/useform(_:)","title":"func useForm<FieldName>(FormOption<FieldName>) -> FormControl<FieldName>","type":"func"},{"path":"\/documentation\/formhook\/useform(mode:revalidatemode:resolver:context:shouldunregister:shouldfocuserror:delayerrorinnanoseconds:focusedstatebinder:)","title":"func useForm<FieldName>(mode: Mode, reValidateMode: ReValidateMode, resolver: Resolver<FieldName>?, context: Any?, shouldUnregister: Bool, shouldFocusError: Bool, delayErrorInNanoseconds: UInt64, focusedStateBinder: FocusState<FieldName?>.Binding) -> FormControl<FieldName>","type":"func"},{"path":"\/documentation\/formhook\/useform(mode:revalidatemode:resolver:context:shouldunregister:shouldfocuserror:delayerrorinnanoseconds:onfocusfield:)","title":"func useForm<FieldName>(mode: Mode, reValidateMode: ReValidateMode, resolver: Resolver<FieldName>?, context: Any?, shouldUnregister: Bool, shouldFocusError: Bool, delayErrorInNanoseconds: UInt64, onFocusField: (FieldName) -> Void) -> FormControl<FieldName>","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/formhook\/controllerrenderoption","title":"ControllerRenderOption","type":"typealias"},{"path":"\/documentation\/formhook\/fieldregistration","title":"FieldRegistration","type":"typealias"},{"path":"\/documentation\/formhook\/formvalue","title":"FormValue","type":"typealias"},{"path":"\/documentation\/formhook\/messagegeneratorfunction","title":"MessageGeneratorFunction","type":"typealias"},{"path":"\/documentation\/formhook\/revalidatemode","title":"ReValidateMode","type":"typealias"},{"path":"\/documentation\/formhook\/resolver","title":"Resolver","type":"typealias"},{"path":"\/documentation\/formhook\/resolvererror","title":"ResolverError","type":"typealias"},{"path":"\/documentation\/formhook\/resolvervalue","title":"ResolverValue","type":"typealias"},{"path":"\/documentation\/formhook\/validatorfunction","title":"ValidatorFunction","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/formhook\/submissionstate\/notsubmit","title":"case notSubmit","type":"case"},{"path":"\/documentation\/formhook\/submissionstate\/submitted","title":"case submitted","type":"case"},{"path":"\/documentation\/formhook\/submissionstate\/submitting","title":"case submitting","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/formhook\/submissionstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/formhook\/submissionstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/formhook\/submissionstate","title":"SubmissionState","type":"enum"}],"path":"\/documentation\/formhook","title":"FormHook","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}