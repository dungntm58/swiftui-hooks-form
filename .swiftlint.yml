# SwiftLint Configuration for Security-focused Swift Project

# Paths to include/exclude
included:
  - Sources
  - Tests
  - Example

excluded:
  - .build
  - .swiftpm
  - Package.swift
  - "**/*.generated.swift"
  - "**/*.pb.swift"

# Rules Configuration
disabled_rules:
  # Formatting rules - handled by swift-format
  - trailing_whitespace
  - vertical_whitespace
  - comma
  - colon
  - opening_brace
  - statement_position
  - function_name_whitespace  # Updated name for operator_whitespace
  # Content rules handled elsewhere
  - todo # We track TODOs in Danger instead
  # Disable strict rules that conflict with existing code style
  - explicit_type_interface  # Too many violations in existing code
  - file_length  # Test files can be long
  - type_body_length  # Test structs can be long
  - function_body_length  # Some complex functions are acceptable
  - vertical_parameter_alignment  # Conflicts with swift-format
  - no_extension_access_modifier  # Extension modifiers are acceptable
  - switch_case_on_newline  # Compact cases are acceptable
  - strict_fileprivate  # fileprivate is useful for encapsulation

opt_in_rules:
  # Security-focused rules
  - force_unwrapping
  - implicitly_unwrapped_optional
  - weak_delegate
  - explicit_init
  - fatal_error_message
  - file_header
  - first_where
  - force_cast
  - force_try
  - discouraged_direct_init
  - discouraged_optional_boolean
  - discouraged_optional_collection
  - empty_string
  - empty_count
  - fallthrough
  - identical_operands
  - implicit_return
  - joined_default_parameter
  - let_var_whitespace
  - literal_expression_end_indentation
  - modifier_order
  - nimble_operator
  - no_extension_access_modifier
  - no_grouping_extension
  - object_literal
  - operator_usage_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - private_action
  - private_outlet
  - prohibited_super_call
  - reduce_boolean
  - redundant_nil_coalescing
  - redundant_type_annotation
  - required_enum_case
  - single_test_class
  - sorted_first_last
  - sorted_imports
  - static_operator
  - strict_fileprivate
  - switch_case_on_newline
  - toggle_bool
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - vertical_parameter_alignment_on_call
  - yoda_condition

# Analyzer Rules (run with 'swiftlint analyze')
analyzer_rules:
  - explicit_self
  - unused_import

# Rule Configuration
force_cast: warning  # Some cases are necessary in generics
force_try: error
force_unwrapping: error
implicitly_unwrapped_optional: warning  # Common in test files

# Line length
line_length:
  warning: 120
  error: 150
  ignores_function_declarations: true
  ignores_comments: true
  ignores_urls: true

# Note: function_body_length, file_length, and type_body_length are disabled above

# Cyclomatic complexity
cyclomatic_complexity:
  warning: 10
  error: 20

# Nesting levels
nesting:
  type_level:
    warning: 3
    error: 6

# Large tuple
large_tuple:
  warning: 3
  error: 4

# Type name
type_name:
  min_length:
    warning: 3
    error: 2
  max_length:
    warning: 40
    error: 50

# Identifier name
identifier_name:
  min_length:
    warning: 2
    error: 1
  max_length:
    warning: 40
    error: 60
  excluded:
    - id
    - i
    - j
    - k
    - x
    - y
    - z
    - e
    - f
    - v
  allowed_symbols: ["_"]  # Allow underscore prefix for SwiftUI state variables

# Custom rules for security
custom_rules:
  # Detect potential hardcoded secrets
  no_hardcoded_secrets:
    name: "No Hardcoded Secrets"
    regex: '(api[_-]?key|secret[_-]?key|password|token)\s*[=:]\s*"[^"]{8,}"'
    match_kinds:
      - string
    message: "Potential hardcoded secret detected. Use environment variables or secure storage."
    severity: error

  # Prevent HTTP usage in production code (except localhost)
  no_http_urls:
    name: "No HTTP URLs"
    regex: '"http://(?!localhost|127\.0\.0\.1)'
    match_kinds:
      - string
    message: "Use HTTPS instead of HTTP for secure communication."
    severity: warning

  # Detect SQL string concatenation
  no_sql_injection:
    name: "No SQL Injection"
    regex: '(SELECT|INSERT|UPDATE|DELETE).*[\+].*"'
    match_kinds:
      - string
    message: "Potential SQL injection. Use parameterized queries instead of string concatenation."
    severity: error

  # Force error handling for security-critical operations
  force_error_handling:
    name: "Force Error Handling"
    regex: 'try!\s+(keychain|encrypt|decrypt|authenticate|verify)'
    message: "Security operations should use proper error handling instead of force try."
    severity: error

reporter: "xcode"