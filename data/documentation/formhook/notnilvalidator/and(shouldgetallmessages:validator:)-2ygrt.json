{"identifier":{"url":"doc:\/\/FormHook\/documentation\/FormHook\/NotNilValidator\/and(shouldGetAllMessages:validator:)-2ygrt","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Takes a list of validators and returns a compound validator that validates the value with all the validators and returns true if all the validators return true.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"and"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"shouldGetAllMessages"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = false, "},{"kind":"externalParam","text":"validator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":"...) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:8FormHook9ValidatorP","identifier":"doc:\/\/FormHook\/documentation\/FormHook\/Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:8FormHook9ValidatorP5ValueQa","identifier":"doc:\/\/FormHook\/documentation\/FormHook\/Validator\/Value"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:8FormHook9ValidatorP","identifier":"doc:\/\/FormHook\/documentation\/FormHook\/Validator"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:8FormHook9ValidatorP5ValueQa","identifier":"doc:\/\/FormHook\/documentation\/FormHook\/Validator\/Value"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:8FormHook9ValidatorP5ValueQa","identifier":"doc:\/\/FormHook\/documentation\/FormHook\/Validator\/Value"},{"kind":"text","text":"\n"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A Boolean value indicating whether to return all messages from the validators or just the first one. Defaults to ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"shouldGetAllMessages"},{"content":[{"inlineContent":[{"type":"text","text":"A variadic list of "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"s to be combined with this one. All must have the same "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" type as this one."}],"type":"paragraph"}],"name":"validator"}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A compound "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" that combines this one with the given ones using an AND operator."}]}]}],"hierarchy":{"paths":[["doc:\/\/FormHook\/documentation\/FormHook","doc:\/\/FormHook\/documentation\/FormHook\/NotNilValidator"]]},"variants":[{"paths":["\/documentation\/formhook\/notnilvalidator\/and(shouldgetallmessages:validator:)-2ygrt"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"and(shouldGetAllMessages:validator:)","roleHeading":"Instance Method","extendedModule":"FormHook","symbolKind":"method","role":"symbol","externalID":"s:8FormHook9ValidatorPAAE3and20shouldGetAllMessages9validatorQrSb_qd__dtAaBRd__5ValueQyd__AGRtzlF::SYNTHESIZED::s:8FormHook15NotNilValidatorV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"and","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"shouldGetAllMessages","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"validator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":"...) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:8FormHook9ValidatorP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:8FormHook9ValidatorP5ValueQa"},{"text":">\n","kind":"text"}],"modules":[{"name":"FormHook"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://FormHook/documentation/FormHook/NotNilValidator":{"kind":"symbol","title":"NotNilValidator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NotNilValidator","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/FormHook\/documentation\/FormHook\/NotNilValidator","abstract":[],"navigatorTitle":[{"text":"NotNilValidator","kind":"identifier"}],"url":"\/documentation\/formhook\/notnilvalidator"},"doc://FormHook/documentation/FormHook/Validator/Value":{"role":"symbol","abstract":[{"text":"The type of value to be validated.","type":"text"}],"identifier":"doc:\/\/FormHook\/documentation\/FormHook\/Validator\/Value","type":"topic","title":"Value","url":"\/documentation\/formhook\/validator\/value","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}],"kind":"symbol","required":true},"doc://FormHook/documentation/FormHook/Validator":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validator"}],"abstract":[{"type":"text","text":"A protocol used to validate a value of type "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" and return a result of type "},{"type":"codeVoice","code":"Result"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"Validator"}],"role":"symbol","identifier":"doc:\/\/FormHook\/documentation\/FormHook\/Validator","kind":"symbol","title":"Validator","url":"\/documentation\/formhook\/validator"},"doc://FormHook/documentation/FormHook":{"identifier":"doc:\/\/FormHook\/documentation\/FormHook","url":"\/documentation\/formhook","title":"FormHook","kind":"symbol","abstract":[],"role":"collection","type":"topic"},"doc://FormHook/documentation/FormHook/NotNilValidator/and(shouldGetAllMessages:validator:)-2ygrt":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"and","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"shouldGetAllMessages","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"validator","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":"...) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:8FormHook9ValidatorP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:8FormHook9ValidatorP5ValueQa"},{"kind":"text","text":">\n"}],"type":"topic","url":"\/documentation\/formhook\/notnilvalidator\/and(shouldgetallmessages:validator:)-2ygrt","abstract":[{"type":"text","text":"Takes a list of validators and returns a compound validator that validates the value with all the validators and returns true if all the validators return true."}],"role":"symbol","title":"and(shouldGetAllMessages:validator:)","identifier":"doc:\/\/FormHook\/documentation\/FormHook\/NotNilValidator\/and(shouldGetAllMessages:validator:)-2ygrt"}}}